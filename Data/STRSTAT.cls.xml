<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Data.STRSTAT">
<Description>
Признак строения</Description>
<Super>%Persistent,%Populate,%XML.Adaptor</Super>
<TimeCreated>63962,83408.399738</TimeCreated>

<Property name="STRSTATID">
<Description>
Признак строения</Description>
<Type>%Integer</Type>
<Required>1</Required>
</Property>

<Property name="NAME">
<Description>
Наименование</Description>
<Type>%String</Type>
<Required>1</Required>
</Property>

<Property name="SHORTNAME">
<Description>
Краткое наименование</Description>
<Type>%String</Type>
</Property>

<Method name="Input">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	do ##class(p6.Dbf).ReadFile("c:\STRSTAT.dbf")
	for i=1:1:4 {
			set stream =  ^||dbf("row",i)
	 		s obj=##class(Data.STRSTAT).%New()
	 		s obj.STRSTATID=$lg(stream,1)
	 		s obj.NAME=$lg(stream,2)
			s obj.SHORTNAME=$lg(stream,3)
			d obj.%Save()
	}
	
	quit $$$OK
]]></Implementation>
</Method>


<UDLText name="T">
<Content><![CDATA[
// Добавленный метод импорта из XML файла

]]></Content>
</UDLText>

<Method name="Import">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	#include %occStatus
	// Создаем экземпляр %XML.Reader
    Set reader = ##class(%XML.Reader).%New()
    
    // Открываем наш XML файл. В будующем сделаю путь передаваемым в метод параметром.
    Set status = reader.OpenFile("C:\temp\fias_delta_xml\AS_STRSTAT_20160418_127158a8-c2c2-4faa-9c05-fc699abdf54a.XML")
    If $$$ISERR(status) {do $System.Status.DisplayError(status)}
    
    // Ассоциируем XML элемент с нашим классом
    Do reader.Correlate("StructureStatus","Data.STRSTAT")
    
	set counter = 0
    // Считываем данный с XML файла
    While (reader.Next(.object,.status)) 
    {
		
		s counter=counter+1
		s obj = ##class(Data.STRSTAT).%New()	
		TStart	
		s obj.STRSTATID = object.STRSTATID
		s obj.NAME = object.NAME
		s obj.SHORTNAME = object.SHORTNAME
		d obj.%Save()
		Tcommit


		/*Вариант заполнение через SQL, альтернатива объектному заполнению
        set STRSTATID = object.STRSTATID
        w STRSTATID
        set NAME = object.NAME
        set SHORTNAME = object.SHORTNAME
        TStart
        &SQL(
			insert into Data.STRSTAT (STRSTATID,NAME,SHORTNAME)
			Values (:STRSTATID, :NAME, :SHORTNAME)
			)
				
		Tcommit 
		*/ 
    }
	w "сохранено "_counter_" записей"
    q obj //через sql нужно будет удалить obj
    
    // Обработчик ошибки
    If $$$ISERR(status) {do $System.Status.DisplayError(status)}
    
    
    //Do reader.Rewind() стоит ли добавить?
]]></Implementation>
</Method>
<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^Data.STRSTATD</DataLocation>
<DefaultData>STRSTATDefaultData</DefaultData>
<IdLocation>^Data.STRSTATD</IdLocation>
<IndexLocation>^Data.STRSTATI</IndexLocation>
<StreamLocation>^Data.STRSTATS</StreamLocation>
<Data name="STRSTATDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>STRSTATID</Value>
</Value>
<Value name="3">
<Value>NAME</Value>
</Value>
<Value name="4">
<Value>SHORTNAME</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
